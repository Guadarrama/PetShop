{"version":3,"sources":["Components/PetList.js","Components/PetForm.js","Components/PetPage.js","Components/EditPet.js","App.js","serviceWorker.js","index.js"],"names":["PetList","props","useState","pets","setPets","useEffect","axios","get","then","res","data","console","log","catch","err","to","className","map","pet","key","_id","name","type","PetForm","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","nameErrorString","setNameErrorString","onSubmit","e","preventDefault","tempNames","i","length","push","toLowerCase","includes","post","navigate","htmlFor","message","id","onChange","target","value","rows","cols","PetPage","likes","setLikes","setPetId","onClick","delete","EditPet","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aaa5604d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport axios from 'axios';\n\nconst PetList = props => {\n\n    const [pets, setPets] = useState([]);\n\n    useEffect(() => {\n      axios.get(\"http://localhost:8000/api/pets\")\n        .then(res => {\n          setPets(res.data);\n          console.log(res.data);\n        })\n        .catch(err => console.log(err));\n    }, []);\n\n\n    return (\n        <div>\n            <h4>Thesee pets are looking for a home!</h4>\n            <h4>\n                <Link to={\"/pets/new\"}>Add Pets to list</Link>\n            </h4>\n            <table>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th className=\"border border-dark text-center\">Name</th>\n\t\t\t\t\t\t\t\t\t\t<th className=\"border border-dark text-center\">Type</th>\n\t\t\t\t\t\t\t\t\t\t<th className=\"border border-dark text-center\">Actions</th>\n\t\t\t\t\t\t\t\t\t</tr>\n                {\n                    pets.map(pet => \n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={pet._id}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"border border-primary p-3\">{pet.name}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"border border-primary p-3\">{pet.type}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"border border-primary p-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/pets/${pet._id}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-info m-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDetails\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/pets/${pet._id}/edit`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary m-1\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n                    )\n                }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default PetList;","import React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst PetForm = props => {\n\t\tconst [pets, setPets] = useState([]);\n\t\tconst [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");    \n    const [skill2, setSkill2] = useState(\"\"); \n    const [skill3, setSkill3] = useState(\"\");\n\n\t\tconst [errors, setErrors] = useState({});\n\t\tconst [nameErrorString, setNameErrorString] = useState(\"\");\n\n    const addPet = e =>{\n\t\t\t\te.preventDefault();\n\t\t\t\tlet tempNames = []\n\t\t\t\tfor(let i=0; i < pets.length; i++){\t\n\t\t\t\t\ttempNames.push(pets[i].name.toLowerCase())\n\t\t\t\t}\n\t\t\t\tconsole.log(tempNames)\n\t\t\t\tif (tempNames.includes(name.toLowerCase())){\n\t\t\t\t\tsetNameErrorString(\"This name already exists\")\n\t\t\t\t}\n        axios.post(\"http://localhost:8000/api/pets\", {name, type, description, skill1, skill2, skill3})\n            .then(res => {\n                if(res.data.errors){\n                    setErrors(res.data.errors);\n                    console.log(res.data.errors);\n                }\n                else{\n                    navigate(\"/pets\");\n                }\n            })\n            .catch(err=> {\n                console.log(err)\n            });\n\t\t}\n\n\t\tuseEffect(() => {\n      axios.get(\"http://localhost:8000/api/pets\")\n        .then(res => {\n\t\t\t\t\tconsole.log(res.data);\n\t\t\t\t\tsetPets(res.data);\n        })\n        .catch(err => console.log(err));\n    }, []);\n   \n    return(\n        <div className=\"p-2\">\n            <h4>Know of a pet needing a home?</h4>\n            <form onSubmit={ addPet }>\n              <div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"Name\">Name </label>\n\t\t\t\t\t\t\t\t\t{nameErrorString ?<span className =\"text-danger\">{nameErrorString}</span>: \"\" }\n                  {errors.name ?<span className =\"text-danger\">{errors.name.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"Name\"\n                      onChange={e => setName(e.target.value)}\n                  />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"petType\">Pet Type </label>\n                  {errors.type ?<span className =\"text-danger\">{errors.type.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"petType\"\n                      onChange={e => setType(e.target.value)}\n                  />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor = \"Description\">Description</label>\n                  {errors.description ?<span className =\"text-danger\">{errors.description.message}</span>: \"\"}\n                  <textarea rows=\"4\" cols=\"20\"\n                      className=\"form-control\"\n                      onChange={e => setDescription(e.target.value)}\n                  >\n                  </textarea>                    \n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"skill1\">Skill 1</label>\n                  {errors.skill1 ?<span className =\"text-danger\">{errors.skill1.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"skill1\"\n                      onChange={e => setSkill1(e.target.value)}\n                  />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"skill2\">Skill 2</label>\n                  {errors.skill2 ?<span className =\"text-danger\">{errors.skill2.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"skill2\"\n                      onChange={e => setSkill2(e.target.value)}\n                  />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"skill3\">Skill 3</label>\n                  {errors.skill3 ?<span className =\"text-danger\">{errors.skill3.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"skill3\"\n                      onChange={e => setSkill3(e.target.value)}\n                  />\n              </div>\n                <hr/>\n                <Link\n                    className=\"btn btn-outline-danger\"\n                    to=\"/pets\"\n                >\n                    Cancel\n                </Link>\n                <span> | </span>\n                <input\n                    type=\"submit\"\n                    value=\"Add Pet\"\n                    className=\"btn btn-outline-primary\"\n                />\n            </form>\n\n        </div>\n    )\n}\n\nexport default PetForm;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, navigate } from '@reach/router';\n\n\nconst PetPage = props =>{\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");    \n    const [skill2, setSkill2] = useState(\"\"); \n\tconst [skill3, setSkill3] = useState(\"\");\n\tconst [likes, setLikes] = useState(0);\n\tconst [_id, setPetId] = useState(\"\");\n\n\t\tconst deletePet = _id =>{\n\t\t\t//console.log(props._id)\n\t\t\taxios.delete(`http://localhost:8000/api/pets/${props._id}`)\n\t\t\t\t.then(res =>{\n\t\t\t\t\tnavigate(\"/pets\");\n\t\t\t\t\tconsole.log(\"deleted\")\n\t\t\t\t});\n\t\t}\n\n\t\tconst likePet = _id =>{};\n\t\t\n    useEffect(() => {\n\t\t\taxios.get(`http://localhost:8000/api/pets/${props._id}`)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tconsole.log(res.data)\n\t\t\t\t\t\t\tsetName(res.data.name);\n\t\t\t\t\t\t\tsetType(res.data.type);\n\t\t\t\t\t\t\tsetDescription(res.data.description);\n\t\t\t\t\t\t\tsetSkill1(res.data.skill1);\n\t\t\t\t\t\t\tsetSkill2(res.data.skill2);\n\t\t\t\t\t\t\tsetSkill3(res.data.skill3);\n\t\t\t\t\t\t\tsetPetId(res.data._id);\n\t\t\t\t\t\t\tsetLikes(res.data.likes);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.log(err))\n\t\t\tconsole.log(\"write when found\", props._id)\n        }, [props._id])\n\t\t\t\t\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Link to={\"/pets\"}\n\t\t\t\t\t\tclassName=\"btn btn-outline-info\"\n\t\t\t\t>\n\t\t\t\t\t\tHome\n\t\t\t\t</Link>\n\t\t\t\t<h4>Details about<em> {name}</em></h4>\n\t\t\t\t<hr/>\n\t\t\t\t<div><b>Pet Type:</b> {type}</div>\n\t\t\t\t<div><b>Description:</b> {description} </div>\n\t\t\t\t<div>\n\t\t\t\t<b>Skills:</b> \n\t\t\t\t\t{skill1 ? <span> {skill1}, </span>: \"\"}\n\t\t\t\t\t{skill2 ? <span> {skill2}, </span>: \"\"}\n\t\t\t\t\t{skill3 ? <span> {skill3}.</span>: \"\"}\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<b>Likes:</b> {likes}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick = {e => {deletePet(_id)} }\n\t\t\t\t\t\tclassName = \"btn btn-outline-primary d-inline-block m-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t\tAdopt this pet\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick = {e => {likePet(_id)} }\n\t\t\t\t\t\tclassName = \"btn btn-outline-warning d-inline-block m-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t\tLike\n\t\t\t\t\t</button>\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n}\n\nexport default PetPage;","import React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst EditPet = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\");    \n    const [skill2, setSkill2] = useState(\"\"); \n    const [skill3, setSkill3] = useState(\"\");\n\n\t\tconst [errors, setErrors] = useState({});\n\t\t\n    useEffect(() => {\n\t\t\taxios.get(`http://localhost:8000/api/pets/${props._id}`)\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\tconsole.log(res.data)\n\t\t\t\t\t\t\tsetName(res.data.name);\n\t\t\t\t\t\t\tsetType(res.data.type);\n\t\t\t\t\t\t\tsetDescription(res.data.description);\n\t\t\t\t\t\t\tsetSkill1(res.data.skill1);\n\t\t\t\t\t\t\tsetSkill2(res.data.skill2);\n\t\t\t\t\t\t\tsetSkill3(res.data.skill3);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => console.log(err))\n\t\t\tconsole.log(\"write when found\", props._id)\n\t\t}, [props._id])\t\n\n    const editPet = e =>{\n        e.preventDefault();\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, {name, type, description, skill1, skill2, skill3})\n            .then(res => {\n                if(res.data.errors){\n                    setErrors(res.data.errors);\n                    console.log(res.data.errors);\n                }\n                else{\n                    navigate(\"/pets\");\n                }\n            })\n            .catch(err=> {\n                console.log(err)\n            });\n\n    }\n   \n    return(\n        <div className=\"p-2\">\n            <h4>Edit Pet:</h4>\n            <form onSubmit={ editPet }>\n              <div className=\"form-group\">\n                  <label htmlFor=\"Name\">Name </label>\n                  {errors.name ?<span className =\"text-danger\">{errors.name.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"Name\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\n                  />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"petType\">Pet Type </label>\n                  {errors.type ?<span className =\"text-danger\">{errors.type.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"petType\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setType(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\tvalue={type}\n                  />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor = \"Description\">Description</label>\n                  {errors.description ?<span className =\"text-danger\">{errors.description.message}</span>: \"\"}\n                  <textarea rows=\"4\" cols=\"20\"\n                      className=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setDescription(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\tvalue={description}\n                  >\n                  </textarea>                    \n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"skill1\">Skill 1</label>\n                  {errors.skill1 ?<span className =\"text-danger\">{errors.skill1.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"skill1\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setSkill1(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\tvalue={skill1}\n                  />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"skill2\">Skill 2</label>\n                  {errors.skill2 ?<span className =\"text-danger\">{errors.skill2.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"skill2\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setSkill2(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\tvalue={skill2}\n                  />\n              </div>\n              <div className=\"form-group\">\n                  <label htmlFor=\"skill3\">Skill 3</label>\n                  {errors.skill3 ?<span className =\"text-danger\">{errors.skill3.message}</span>: \"\"}\n                  <input type=\"text\"\n                      className=\"form-control\"\n                      id = \"skill3\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setSkill3(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\tvalue={skill3}\n                  />\n              </div>\n                <hr/>\n                <Link\n                    className=\"btn btn-outline-danger\"\n                    to=\"/pets\"\n                >\n                    Cancel\n                </Link>\n                <span> | </span>\n                <input\n                    type=\"submit\"\n                    value=\"Edit Pet\"\n                    className=\"btn btn-outline-primary\"\n                />\n            </form>\n\n        </div>\n    )\n\n\n}\n\nexport default EditPet;","import React from 'react';\nimport { Router } from '@reach/router';\n// import axios from 'axios';\n\n\nimport PetList from './Components/PetList'\nimport PetForm from './Components/PetForm'\nimport PetPage from './Components/PetPage'\nimport EditPet from './Components/EditPet'\n\n\n\nfunction App() {\n\n  // const [isLiked, setIsLiked] = useState([]);\n  // const [pets, setPets] = useState([]);\n\n  // let tempArr = []\n  // for(let i=0; i < pets.length; i++){\t\n  //   tempArr.push({isThisLiked: 0, _id: pets[i]._id})\n  // }\n  // console.log(tempArr)\n  // // setIsLiked(tempArr)\n  // // console.log(isLiked)\n\n  // useEffect(() => {\n  //   axios.get(\"http://localhost:8000/api/pets\")\n  //     .then(res => {\n  //       console.log(res.data);\n  //       setPets(res.data);\n  //     })\n  //     .catch(err => console.log(err));\n  // }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"bg-light p-2\">\n        <h2>Pet Shelter</h2>\n      </div>\n\n      <div className=\"p-2\">\n        <Router>\n          <PetList path=\"/pets\" />\n          <PetForm path=\"/pets/new\" />\n          <PetPage path=\"pets/:_id\" />\n          <EditPet path=\"pets/:_id/edit\" />\n        </Router>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}